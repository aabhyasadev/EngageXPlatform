version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: engagex-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-engagex}
      POSTGRES_USER: ${POSTGRES_USER:-engagex_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - engagex-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-engagex_user} -d ${POSTGRES_DB:-engagex}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: engagex-redis
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - engagex-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Django Backend API
  backend:
    build:
      context: ..
      dockerfile: devops/docker/backend.Dockerfile
    container_name: engagex-backend
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-engagex_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-engagex}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - SECRET_KEY=${SECRET_KEY}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
    volumes:
      - media_files:/app/media
      - static_files:/app/staticfiles
      - backend_logs:/app/logs
    ports:
      - "${BACKEND_PORT:-8001}:8001"
    networks:
      - engagex-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  # Celery Worker for Background Tasks
  celery-worker:
    build:
      context: ..
      dockerfile: devops/docker/celery.Dockerfile
    container_name: engagex-celery-worker
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-engagex_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-engagex}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - SECRET_KEY=${SECRET_KEY}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - PGHOST=postgres
      - PGPORT=5432
      - PGUSER=${POSTGRES_USER:-engagex_user}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - CELERY_CONCURRENCY=${CELERY_CONCURRENCY:-4}
      - CELERY_LOG_LEVEL=${CELERY_LOG_LEVEL:-info}
    volumes:
      - celery_logs:/app/logs
    networks:
      - engagex-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: ..
      dockerfile: devops/docker/celery.Dockerfile
    container_name: engagex-celery-beat
    command: celery -A config beat --loglevel=info --pidfile=/tmp/celerybeat.pid
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-engagex_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-engagex}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - celery_beat_data:/app/celerybeat-schedule
    networks:
      - engagex-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Flower - Celery Monitoring
  flower:
    build:
      context: ..
      dockerfile: devops/docker/celery.Dockerfile
    container_name: engagex-flower
    command: celery -A config flower --port=5555 --basic_auth=${FLOWER_USER:-admin}:${FLOWER_PASSWORD:-admin}
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    networks:
      - engagex-network
    depends_on:
      - redis
      - celery-worker
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # React Frontend
  frontend:
    build:
      context: ..
      dockerfile: devops/docker/frontend.Dockerfile
    container_name: engagex-frontend
    environment:
      - NODE_ENV=production
      - API_URL=http://backend:8001
      - VITE_STRIPE_PUBLIC_KEY=${VITE_STRIPE_PUBLIC_KEY}
    ports:
      - "${FRONTEND_PORT:-5000}:5000"
    networks:
      - engagex-network
    depends_on:
      - backend
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: engagex-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - static_files:/usr/share/nginx/html/static:ro
      - media_files:/usr/share/nginx/html/media:ro
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    networks:
      - engagex-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  media_files:
    driver: local
  static_files:
    driver: local
  backend_logs:
    driver: local
  celery_logs:
    driver: local
  celery_beat_data:
    driver: local

networks:
  engagex-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
