# Generated by Django 5.2.6 on 2025-09-18 09:32

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('subscription_plan', models.CharField(choices=[('free_trial', 'Free Trial'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], default='free_trial', max_length=20)),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True)),
                ('contacts_limit', models.IntegerField(default=1000)),
                ('campaigns_limit', models.IntegerField(default=10)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('employees_range', models.CharField(blank=True, max_length=50, null=True)),
                ('contacts_range', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'organizations',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('sid', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('sess', models.JSONField()),
                ('expire', models.DateTimeField(db_index=True)),
            ],
            options={
                'db_table': 'sessions',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_image_url', models.URLField(blank=True, max_length=500, null=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('campaign_manager', 'Campaign Manager'), ('analyst', 'Analyst'), ('editor', 'Editor')], default='campaign_manager', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='core.organization')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=255)),
                ('from_email', models.EmailField(max_length=255, validators=[django.core.validators.EmailValidator()])),
                ('from_name', models.CharField(blank=True, max_length=255, null=True)),
                ('reply_to_email', models.EmailField(blank=True, max_length=255, null=True, validators=[django.core.validators.EmailValidator()])),
                ('html_content', models.TextField(blank=True, null=True)),
                ('text_content', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('paused', 'Paused'), ('failed', 'Failed')], default='draft', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.IntegerField(default=0)),
                ('total_sent', models.IntegerField(default=0)),
                ('total_delivered', models.IntegerField(default=0)),
                ('total_opened', models.IntegerField(default=0)),
                ('total_clicked', models.IntegerField(default=0)),
                ('total_bounced', models.IntegerField(default=0)),
                ('total_unsubscribed', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='core.organization')),
            ],
            options={
                'db_table': 'campaigns',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('html_content', models.TextField(blank=True, null=True)),
                ('text_content', models.TextField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_templates', to='core.organization')),
            ],
            options={
                'db_table': 'email_templates',
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('domain', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('dkim_record', models.TextField(blank=True, null=True)),
                ('cname_record', models.TextField(blank=True, null=True)),
                ('dmarc_record', models.TextField(blank=True, null=True)),
                ('txt_record', models.TextField(blank=True, null=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='core.organization')),
            ],
            options={
                'db_table': 'domains',
            },
        ),
        migrations.CreateModel(
            name='ContactGroup',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_groups', to='core.organization')),
            ],
            options={
                'db_table': 'contact_groups',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, validators=[django.core.validators.EmailValidator()])),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('language', models.CharField(default='en', max_length=10)),
                ('is_subscribed', models.BooleanField(default=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='core.organization')),
            ],
            options={
                'db_table': 'contacts',
                'unique_together': {('organization', 'email')},
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('open', 'Open'), ('click', 'Click'), ('bounce', 'Bounce'), ('unsubscribe', 'Unsubscribe'), ('spam_report', 'Spam Report')], max_length=50)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics_events', to='core.campaign')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics_events', to='core.contact')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_events', to='core.organization')),
            ],
            options={
                'db_table': 'analytics_events',
            },
        ),
        migrations.CreateModel(
            name='CampaignRecipient',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('bounced', 'Bounced'), ('unsubscribed', 'Unsubscribed')], default='pending', max_length=50)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('bounced_at', models.DateTimeField(blank=True, null=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='core.campaign')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_recipients', to='core.contact')),
            ],
            options={
                'db_table': 'campaign_recipients',
                'unique_together': {('campaign', 'contact')},
            },
        ),
        migrations.CreateModel(
            name='ContactGroupMembership',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to='core.contact')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='core.contactgroup')),
            ],
            options={
                'db_table': 'contact_group_memberships',
                'unique_together': {('contact', 'group')},
            },
        ),
    ]
