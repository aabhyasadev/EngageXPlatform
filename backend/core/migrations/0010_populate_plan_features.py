# Generated by Django 5.2.6 on 2025-09-22 08:37

from django.db import migrations


def populate_plan_features(apps, schema_editor):
    """Populate the PlanFeatures model with pricing and features for each plan"""
    PlanFeatures = apps.get_model('core', 'PlanFeatures')
    
    # Define plan features configuration
    plans = [
        {
            'plan': 'free_trial',
            'price_cents': 0,
            'contacts_limit': 1000,
            'campaigns_limit': 10,
            'emails_per_month': 10000,
            'has_email_campaigns': True,
            'has_basic_analytics': True,
            'has_advanced_analytics': False,
            'has_ab_testing': False,
            'has_automation': False,
            'has_custom_templates': False,
            'has_white_labeling': False,
            'has_api_access': False,
            'has_priority_support': False,
        },
        {
            'plan': 'basic_monthly',
            'price_cents': 2900,  # $29
            'contacts_limit': 5000,
            'campaigns_limit': 50,
            'emails_per_month': 50000,
            'has_email_campaigns': True,
            'has_basic_analytics': True,
            'has_advanced_analytics': False,
            'has_ab_testing': True,
            'has_automation': False,
            'has_custom_templates': False,
            'has_white_labeling': False,
            'has_api_access': False,
            'has_priority_support': False,
        },
        {
            'plan': 'basic_yearly',
            'price_cents': 29000,  # $290 (10 months price)
            'contacts_limit': 5000,
            'campaigns_limit': 50,
            'emails_per_month': 50000,
            'has_email_campaigns': True,
            'has_basic_analytics': True,
            'has_advanced_analytics': False,
            'has_ab_testing': True,
            'has_automation': False,
            'has_custom_templates': False,
            'has_white_labeling': False,
            'has_api_access': False,
            'has_priority_support': False,
        },
        {
            'plan': 'pro_monthly',
            'price_cents': 7900,  # $79
            'contacts_limit': 25000,
            'campaigns_limit': 200,
            'emails_per_month': 250000,
            'has_email_campaigns': True,
            'has_basic_analytics': True,
            'has_advanced_analytics': True,
            'has_ab_testing': True,
            'has_automation': True,
            'has_custom_templates': True,
            'has_white_labeling': False,
            'has_api_access': False,
            'has_priority_support': False,
        },
        {
            'plan': 'pro_yearly',
            'price_cents': 79000,  # $790 (10 months price)
            'contacts_limit': 25000,
            'campaigns_limit': 200,
            'emails_per_month': 250000,
            'has_email_campaigns': True,
            'has_basic_analytics': True,
            'has_advanced_analytics': True,
            'has_ab_testing': True,
            'has_automation': True,
            'has_custom_templates': True,
            'has_white_labeling': False,
            'has_api_access': False,
            'has_priority_support': False,
        },
        {
            'plan': 'premium_monthly',
            'price_cents': 14900,  # $149
            'contacts_limit': 100000,
            'campaigns_limit': 1000,
            'emails_per_month': 1000000,
            'has_email_campaigns': True,
            'has_basic_analytics': True,
            'has_advanced_analytics': True,
            'has_ab_testing': True,
            'has_automation': True,
            'has_custom_templates': True,
            'has_white_labeling': True,
            'has_api_access': True,
            'has_priority_support': True,
        },
        {
            'plan': 'premium_yearly',
            'price_cents': 149000,  # $1490 (10 months price)
            'contacts_limit': 100000,
            'campaigns_limit': 1000,
            'emails_per_month': 1000000,
            'has_email_campaigns': True,
            'has_basic_analytics': True,
            'has_advanced_analytics': True,
            'has_ab_testing': True,
            'has_automation': True,
            'has_custom_templates': True,
            'has_white_labeling': True,
            'has_api_access': True,
            'has_priority_support': True,
        },
    ]
    
    # Create PlanFeatures objects
    for plan_data in plans:
        PlanFeatures.objects.create(**plan_data)


def reverse_populate_plan_features(apps, schema_editor):
    """Remove all PlanFeatures data"""
    PlanFeatures = apps.get_model('core', 'PlanFeatures')
    PlanFeatures.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0009_planfeatures_organization_billing_cycle_and_more'),
    ]

    operations = [
        migrations.RunPython(populate_plan_features, reverse_populate_plan_features),
    ]
