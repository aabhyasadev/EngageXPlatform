# Generated by Django 4.2.24 on 2025-10-06 12:09

import apps.common.utils
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "replit_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=150, null=True, unique=True
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        unique=True,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=100, null=True)),
                ("last_name", models.CharField(blank=True, max_length=100, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "profile_image_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("organizer", "Organizer"),
                            ("campaign_manager", "Campaign Manager"),
                            ("analyst", "Analyst"),
                            ("editor", "Editor"),
                        ],
                        default="campaign_manager",
                        max_length=20,
                    ),
                ),
                ("mfa_enabled", models.BooleanField(default=False)),
                ("otp_secret", models.CharField(blank=True, max_length=32, null=True)),
                ("sso_enabled", models.BooleanField(default=False)),
                ("last_login_at", models.DateTimeField(blank=True, null=True)),
                ("login_attempts", models.IntegerField(default=0)),
                ("locked_until", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="Invitation",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("organizer", "Organizer"),
                            ("campaign_manager", "Campaign Manager"),
                            ("analyst", "Analyst"),
                            ("editor", "Editor"),
                        ],
                        default="campaign_manager",
                        max_length=20,
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        default=apps.common.utils.generate_invitation_token,
                        max_length=64,
                        unique=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("expired", "Expired"),
                            ("revoked", "Revoked"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("expires_at", models.DateTimeField()),
                ("accepted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "invitations",
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "subscription_plan",
                    models.CharField(
                        choices=[
                            ("free_trial", "Free Trial"),
                            ("basic_monthly", "Basic Monthly"),
                            ("basic_yearly", "Basic Yearly"),
                            ("pro_monthly", "Pro Monthly"),
                            ("pro_yearly", "Pro Yearly"),
                            ("premium_monthly", "Premium Monthly"),
                            ("premium_yearly", "Premium Yearly"),
                        ],
                        default="free_trial",
                        max_length=30,
                    ),
                ),
                (
                    "subscription_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("past_due", "Past Due"),
                            ("canceled", "Canceled"),
                            ("trialing", "Trialing"),
                        ],
                        default="trialing",
                        max_length=20,
                    ),
                ),
                (
                    "billing_cycle",
                    models.CharField(
                        blank=True,
                        choices=[("monthly", "Monthly"), ("yearly", "Yearly")],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("trial_ends_at", models.DateTimeField(blank=True, null=True)),
                ("subscription_ends_at", models.DateTimeField(blank=True, null=True)),
                ("current_period_end", models.DateTimeField(blank=True, null=True)),
                ("cancel_at_period_end", models.BooleanField(default=False)),
                (
                    "stripe_customer_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "stripe_subscription_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "stripe_price_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "stripe_payment_method_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("contacts_limit", models.IntegerField(default=1000)),
                ("campaigns_limit", models.IntegerField(default=10)),
                ("emails_per_month_limit", models.IntegerField(default=10000)),
                ("is_subscription_active", models.BooleanField(default=True)),
                ("industry", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "employees_range",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "contacts_range",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "organizations",
            },
        ),
        migrations.CreateModel(
            name="OrganizationMembership",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("organizer", "Organizer"),
                            ("campaign_manager", "Campaign Manager"),
                            ("analyst", "Analyst"),
                            ("editor", "Editor"),
                        ],
                        default="campaign_manager",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("pending", "Pending"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "invited_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="invited_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="accounts.organization",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "organization_memberships",
            },
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["subscription_plan"], name="organizatio_subscri_7ff2d9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["subscription_status"], name="organizatio_subscri_72b760_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["stripe_customer_id"], name="organizatio_stripe__95852b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["trial_ends_at"], name="organizatio_trial_e_d62cc3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["subscription_ends_at"], name="organizatio_subscri_66e729_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["-created_at"], name="organizatio_created_7f4ee3_idx"
            ),
        ),
        migrations.AddField(
            model_name="invitation",
            name="invited_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sent_invitations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="invitation",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="invitations",
                to="accounts.organization",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="organization",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="users",
                to="accounts.organization",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AddIndex(
            model_name="organizationmembership",
            index=models.Index(
                fields=["user", "status"], name="organizatio_user_id_d04e52_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organizationmembership",
            index=models.Index(
                fields=["organization", "status"], name="organizatio_organiz_33b363_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organizationmembership",
            index=models.Index(fields=["role"], name="organizatio_role_e3a08a_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="organizationmembership",
            unique_together={("user", "organization")},
        ),
        migrations.AddIndex(
            model_name="invitation",
            index=models.Index(
                fields=["organization", "email", "status"],
                name="invitations_organiz_ccfe93_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="invitation",
            index=models.Index(fields=["token"], name="invitations_token_5b330c_idx"),
        ),
        migrations.AddIndex(
            model_name="invitation",
            index=models.Index(fields=["email"], name="invitations_email_6e7169_idx"),
        ),
        migrations.AddIndex(
            model_name="invitation",
            index=models.Index(fields=["status"], name="invitations_status_1739b8_idx"),
        ),
        migrations.AddIndex(
            model_name="invitation",
            index=models.Index(
                fields=["expires_at"], name="invitations_expires_7f52c2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["replit_id"], name="users_replit__fd5f2c_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="users_email_4b85f2_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["organization"], name="users_organiz_ca9165_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["role"], name="users_role_0ace22_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["is_active"], name="users_is_acti_847b48_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["stripe_customer_id"], name="users_stripe__0fdd23_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["-created_at"], name="users_created_30b417_idx"),
        ),
    ]
