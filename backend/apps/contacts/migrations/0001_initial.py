# Generated by Django 4.2.24 on 2025-10-06 12:09

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=100, null=True)),
                ("last_name", models.CharField(blank=True, max_length=100, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("language", models.CharField(default="en", max_length=10)),
                ("is_subscribed", models.BooleanField(default=True)),
                ("unsubscribed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="accounts.organization",
                    ),
                ),
            ],
            options={
                "db_table": "contacts",
            },
        ),
        migrations.CreateModel(
            name="ContactGroup",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact_groups",
                        to="accounts.organization",
                    ),
                ),
            ],
            options={
                "db_table": "contact_groups",
            },
        ),
        migrations.CreateModel(
            name="ContactGroupMembership",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_memberships",
                        to="contacts.contact",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="contacts.contactgroup",
                    ),
                ),
            ],
            options={
                "db_table": "contact_group_memberships",
                "indexes": [
                    models.Index(
                        fields=["contact"], name="contact_gro_contact_8f26ea_idx"
                    ),
                    models.Index(
                        fields=["group"], name="contact_gro_group_i_1d755d_idx"
                    ),
                    models.Index(
                        fields=["-created_at"], name="contact_gro_created_3c23c4_idx"
                    ),
                ],
                "unique_together": {("contact", "group")},
            },
        ),
        migrations.AddIndex(
            model_name="contactgroup",
            index=models.Index(
                fields=["organization"], name="contact_gro_organiz_d2b800_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="contactgroup",
            index=models.Index(
                fields=["-created_at"], name="contact_gro_created_402d85_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["organization", "is_subscribed"],
                name="contacts_organiz_fb2d14_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(fields=["email"], name="contacts_email_2eb381_idx"),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["is_subscribed"], name="contacts_is_subs_ba3579_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["-created_at"], name="contacts_created_994491_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="contact",
            unique_together={("organization", "email")},
        ),
    ]
