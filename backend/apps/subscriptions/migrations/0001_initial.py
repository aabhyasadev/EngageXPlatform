# Generated by Django 4.2.24 on 2025-10-06 12:09

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PlanFeatures",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "plan",
                    models.CharField(
                        choices=[
                            ("free_trial", "Free Trial"),
                            ("basic_monthly", "Basic Monthly"),
                            ("basic_yearly", "Basic Yearly"),
                            ("pro_monthly", "Pro Monthly"),
                            ("pro_yearly", "Pro Yearly"),
                            ("premium_monthly", "Premium Monthly"),
                            ("premium_yearly", "Premium Yearly"),
                        ],
                        max_length=30,
                        unique=True,
                    ),
                ),
                ("price_cents", models.IntegerField()),
                ("contacts_limit", models.IntegerField()),
                ("campaigns_limit", models.IntegerField()),
                ("emails_per_month", models.IntegerField()),
                ("has_email_campaigns", models.BooleanField(default=True)),
                ("has_basic_analytics", models.BooleanField(default=True)),
                ("has_advanced_analytics", models.BooleanField(default=False)),
                ("has_ab_testing", models.BooleanField(default=False)),
                ("has_automation", models.BooleanField(default=False)),
                ("has_custom_templates", models.BooleanField(default=False)),
                ("has_white_labeling", models.BooleanField(default=False)),
                ("has_api_access", models.BooleanField(default=False)),
                ("has_priority_support", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Plan Features",
                "verbose_name_plural": "Plan Features",
                "db_table": "plan_features",
            },
        ),
        migrations.CreateModel(
            name="ProcessedWebhookEvent",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_id",
                    models.CharField(db_index=True, max_length=255, unique=True),
                ),
                ("event_type", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("processed", "Processed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("processed_at", models.DateTimeField(auto_now_add=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "db_table": "processed_webhook_events",
                "indexes": [
                    models.Index(
                        fields=["event_id"], name="processed_w_event_i_c57493_idx"
                    ),
                    models.Index(
                        fields=["processed_at"], name="processed_w_process_ba066e_idx"
                    ),
                    models.Index(
                        fields=["status"], name="processed_w_status_d7c8a3_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UsageTracking",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("month", models.DateField()),
                ("emails_sent", models.IntegerField(default=0)),
                ("campaigns_created", models.IntegerField(default=0)),
                ("contacts_imported", models.IntegerField(default=0)),
                ("templates_created", models.IntegerField(default=0)),
                ("domains_verified", models.IntegerField(default=0)),
                ("api_calls", models.IntegerField(default=0)),
                ("ab_tests_created", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_tracking",
                        to="accounts.organization",
                    ),
                ),
            ],
            options={
                "db_table": "usage_tracking",
                "indexes": [
                    models.Index(
                        fields=["organization", "month"],
                        name="usage_track_organiz_c28341_idx",
                    )
                ],
                "unique_together": {("organization", "month")},
            },
        ),
        migrations.CreateModel(
            name="SubscriptionHistory",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("updated", "Updated"),
                            ("canceled", "Canceled"),
                            ("renewed", "Renewed"),
                            ("payment_succeeded", "Payment Succeeded"),
                            ("payment_failed", "Payment Failed"),
                            ("trial_started", "Trial Started"),
                            ("trial_ended", "Trial Ended"),
                            ("plan_changed", "Plan Changed"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "stripe_event_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "old_plan",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("free_trial", "Free Trial"),
                            ("basic_monthly", "Basic Monthly"),
                            ("basic_yearly", "Basic Yearly"),
                            ("pro_monthly", "Pro Monthly"),
                            ("pro_yearly", "Pro Yearly"),
                            ("premium_monthly", "Premium Monthly"),
                            ("premium_yearly", "Premium Yearly"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "new_plan",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("free_trial", "Free Trial"),
                            ("basic_monthly", "Basic Monthly"),
                            ("basic_yearly", "Basic Yearly"),
                            ("pro_monthly", "Pro Monthly"),
                            ("pro_yearly", "Pro Yearly"),
                            ("premium_monthly", "Premium Monthly"),
                            ("premium_yearly", "Premium Yearly"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "old_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("active", "Active"),
                            ("past_due", "Past Due"),
                            ("canceled", "Canceled"),
                            ("trialing", "Trialing"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "new_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("active", "Active"),
                            ("past_due", "Past Due"),
                            ("canceled", "Canceled"),
                            ("trialing", "Trialing"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "payment_method",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "payment_method_last4",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                (
                    "payment_method_brand",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("invoice_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "invoice_pdf_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                (
                    "receipt_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("failure_reason", models.TextField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscription_history",
                        to="accounts.organization",
                    ),
                ),
            ],
            options={
                "db_table": "subscription_history",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["organization", "event_type"],
                        name="subscriptio_organiz_6101b2_idx",
                    ),
                    models.Index(
                        fields=["event_type"], name="subscriptio_event_t_2af089_idx"
                    ),
                    models.Index(
                        fields=["stripe_event_id"],
                        name="subscriptio_stripe__673d52_idx",
                    ),
                    models.Index(
                        fields=["invoice_id"], name="subscriptio_invoice_9ac4e2_idx"
                    ),
                    models.Index(
                        fields=["-created_at"], name="subscriptio_created_afb6ac_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Card",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "cardholder_name",
                    models.CharField(default="Card Holder", max_length=255),
                ),
                ("last4", models.CharField(max_length=4)),
                ("brand", models.CharField(max_length=50)),
                ("exp_month", models.IntegerField()),
                ("exp_year", models.IntegerField()),
                ("is_default", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cards",
                        to="accounts.organization",
                    ),
                ),
            ],
            options={
                "db_table": "cards",
                "indexes": [
                    models.Index(
                        fields=["organization", "is_default"],
                        name="cards_organiz_0e1a67_idx",
                    )
                ],
            },
        ),
    ]
